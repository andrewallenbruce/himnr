{
  "hash": "5347ec3ce2726f92a92b58a2cc391bf8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Fee Calculation\"\nauthor: \"Andrew Allen Bruce\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n# Payment Formulas\n\n|          |                                                   |\n|----------|---------------------------------------------------|\n| $RVU_w$  | *Work* Relative Value Unit                        |\n| $GPCI_w$ | *Work* Geographic Practice Cost Index             |\n| $RVU_p$  | *Practice Expense* Relative Value Unit            |\n| $GPCI_p$ | *Practice Expense* Geographic Practice Cost Index |\n| $RVU_m$  | *Malpractice* Relative Value Unit                 |\n| $GPCI_m$ | *Malpractice* Geographic Practice Cost Index      |\n| $CF$     | Conversion Factor                                 |\n\n<br>\n\nThe formulas for the 2024 {{< acr MPFS >}} payment amounts are as follows:\n\n::: panel-tabset\n## Participating\n\n$$ x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF $$\n\n## Non-Participating\n\n$$ y = 0.95x $$\n\n## Limiting Charge\n\n$$ z = 0.95(1.15x) $$\n:::\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the [dot product](https://www.toppr.com/guides/maths-formulas/dot-product-formula/) of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n$$ a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3$$\n\n$$\n  f(y;a,b) = \\begin{cases}\n    \\frac{1}{b-a} & \\text{if } a \\leq y \\leq b, \\\\\n    0 & \\text{otherwise}.\n  \\end{cases}\n$$\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n((wrvu * wgpci) + (prvu * pgpci) + (mrvu * mgpci)) * cf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 367.5065\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# using base r's matrix multiplication infix operator\nc(wrvu, prvu, mrvu) %*% c(wgpci, pgpci, mgpci) * cf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>          [,1]\n#> [1,] 367.5065\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(pracma)\ndot(c(wrvu, prvu, mrvu), c(wgpci, pgpci, mgpci)) * cf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 367.5065\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Facility Amounts:\n#> \n#> RVU Total ............ 11.22\n#> Participating ........ $367.51\n#> Non-Particpating ..... $349.13\n#> Limiting Charge ...... $401.50\n#> \n#> Non-Facility Amounts:\n#> \n#> RVU Total ............ 14.37\n#> Participating ........ $470.44\n#> Non-Particpating ..... $446.91\n#> Limiting Charge ...... $513.95\n```\n\n\n:::\n:::\n\n\n<br>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}